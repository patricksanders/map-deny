<!doctype html>
<html lang="en">
  <head>
     <meta charset="UTF-8"> 
    <link rel="stylesheet" href="/static/ol/ol.css" type="text/css">
    <style>
      .map {
        height: 100%;
        width: 100%;
      }
    </style>
    <script src="/static/ol/ol.js" type="text/javascript"></script>
    <title>map-deny</title>
  </head>
  <body>
    <h2>map-deny</h2>
    <div id="map" class="map"></div>
    <script type="text/javascript">
    var deniedHostsSource = new ol.source.GeoJSON({
      projection:'EPSG:4326',
      url: 'static/data/sample.json'
    });
    var clusterSource = new ol.source.Cluster({
      distance:40,
      source: deniedHostsSource
    });
    var styleCache = {};
	  var deniedHostsLayer = new ol.layer.Vector({
        title: 'Denied Hosts',
        source: clusterSource,
        style: function(feature, resolution) {
          var size = feature.get('features').length;
          var style = styleCache[size];
          if (!style) {
            style = [new ol.style.Style({
              image: new ol.style.Circle({
                radius: 10,
                stroke: new ol.style.Stroke({
                  color: '#fff'
                }),
                fill: new ol.style.Fill({
                  color: '#3399CC'
                })
              }),
              text: new ol.style.Text({
                text: size.toString(),
                fill: new ol.style.Fill({
                  color: '#fff'
                })
              })
            })];
            styleCache[size] = style;
          }
          return style;
        }
      });

      var map = new ol.Map({
        layers: [
          new ol.layer.Tile({
            source: new ol.source.TileWMS({
            url: 'http://demo.boundlessgeo.com/geoserver/wms',
            params: {'LAYERS': 'ne:NE1_HR_LC_SR_W_DR'}
            })
          }),
          /*
          new ol.layer.Tile({
            source: new ol.source.OSM()
            //projection: "EPSG:4326"
          }),
          */
          deniedHostsLayer
        ],
        controls: ol.control.defaults({
          attributionOptions: ({
            collapsible: true
          })
        }),
        target: 'map',
        view: new ol.View({
          projection: 'EPSG:4326',
          center: [0, 0],
          zoom: 2
        })
      });
    </script>
  </body>
</html>
